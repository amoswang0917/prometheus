version: '3.7'

volumes:
    prometheus_data: {}
    grafana_data: {}


services:
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
    ports:
    - target: 9090
      published: 9090
      mode: host
    depends_on:
      - cadvisor
#      - pushgateway
    networks:
      - gaas
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

  node-exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command: 
      - '--path.procfs=/host/proc' 
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
    - target: 9100
      published: 9100
      mode: host
    networks:
      - gaas
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

  alertmanager:
    image: prom/alertmanager
    ports:
    - target: 9093
      published: 9093
      mode: host
    volumes:
      - "./alertmanager/:/etc/alertmanager/"
    networks:
      - gaas
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure    

  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
    - target: 8080
      published: 8080
      mode: host
    networks:
      - gaas
    deploy:
      mode: global
      restart_policy:
          condition: on-failure

  grafana:
    image: grafana/grafana
    depends_on:
      - prometheus
    ports:
    - target: 3000
      published: 3000
      mode: host
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./grafana/config.monitoring
    networks:
      - gaas
    user: "472"
    deploy:
      placement:
        constraints:
          - node.role==manager
      restart_policy:
        condition: on-failure

#  pushgateway:
#    image: prom/pushgateway
#    deploy:
#      mode: global
#      restart_policy:
#        condition: on-failure
#    ports:
#     - target: 9091
#      published: 9091
#      mode: host
#    networks:
#      - gaas

# volumes:
#   flink_jobmanager_data_01:
#     driver: local
#   flink_taskmanager_data_01:
#     driver: local
#   flink_jobmanager_data_02:
#     driver: local
#   flink_taskmanager_data_02:
#     driver: local

networks: 
  gaas: 
    external: 
      name: gaas-network